{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
An API doesn\'92t immediately return your data the way a local asset would because Dart runs in a single thread.\
\
If we solely wait for the API call to return, we would see a frozen screen and we wouldn\'92t be able to interact with the app.\
The API call may take some time to return based on the server\'92s speed, your Internet connection, and other factors.\
\
Rather than wait for it, we wrap the API in an asynchronous operation.\
\
Asynchronous Operation: Lets your app continue to run without getting blocked.\
Future: A Future represents a means for getting a value sometime in the future, used in asynchronous operations.\
\
When a function that returns a future is invoked,\
1. The function queues up work to be done and returns an incomplete future object.\
2. when a value is available, the future object completes with that value or with an error.\
We save the value that the future returns into a variable and call await on the function.\
We need to wrap the function in which this is called with an async keyword.\
}